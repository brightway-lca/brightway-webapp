# based on: https://github.com/actions/starter-workflows/blob/main/pages/static.yml
name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
    paths: # only trigger when files within this directory change
      - pyodide/**
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # https://github.com/actions/checkout/releases
      - name: Setup Pages
        uses: actions/configure-pages@v5 # https://github.com/actions/configure-pages/releases
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # https://github.com/actions/upload-pages-artifact/releases
        with:
          # Upload only directory that contains the static web content
          path: './pyodide'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # https://github.com/actions/deploy-pages/releases